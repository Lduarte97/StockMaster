/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */ 
package View;

import Controller.ProdutosController;
import Model.Produtos;
import Model.Usuarios;
import controller.MovimentacaoController;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.util.List;
import javax.imageio.ImageIO;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import model.MovimentacaoEstoque;

/**
 *
 * @author lldua
 */
public class TelaEntradaSaida extends javax.swing.JFrame {
private ButtonGroup group;
private int userType;
    /**
     * Creates new form TelaEntradaSaida
     */ Usuarios user;
      ProdutosController produtosController = new ProdutosController();
    public TelaEntradaSaida(Usuarios u) {
        initComponents();
        user = u;    
         setJMenuBar(MenuSuperior.criarMenu(this, user));
        selecionarApenasumBotao();
        iconeTela();
       Menu_adm_outras_telas menu = new Menu_adm_outras_telas();
         setJMenuBar(menu.getMenuBarInstance());
    // Exemplo: Atribuindo uma ação diretamente ao campo de pesquisa
        campoPesquisa.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent evt) {
                campoPesquisaActionPerformed(evt);  // Chama o método quando o evento for disparado
            }
        });
        
        // Simulando o evento no construtor
        
        campoPesquisaActionPerformed(new ActionEvent(campoPesquisa, ActionEvent.ACTION_PERFORMED, null)); // Chama o método diretamente
    }

   


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        campoPesquisa = new javax.swing.JTextField();
        campoImagemProduto = new javax.swing.JLabel();
        textoCampoPesquisa = new javax.swing.JLabel();
        campoProduto = new javax.swing.JTextField();
        campoCodigo = new javax.swing.JTextField();
        campoUnidademedida = new javax.swing.JTextField();
        campoCategoria = new javax.swing.JTextField();
        labelNome = new javax.swing.JLabel();
        labelCodigo = new javax.swing.JLabel();
        labelUndmedida = new javax.swing.JLabel();
        labelCategoria = new javax.swing.JLabel();
        labelQuantidade = new javax.swing.JLabel();
        botaoMovimentarEstoque = new javax.swing.JButton();
        quantidade = new javax.swing.JComboBox<>();
        tituloPágina = new javax.swing.JLabel();
        radioButtonSaida = new javax.swing.JRadioButton();
        radioButtonEntrada = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela_produto = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(920, 580));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        campoPesquisa.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        campoPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoPesquisaActionPerformed(evt);
            }
        });
        jPanel1.add(campoPesquisa, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, 390, 30));

        campoImagemProduto.setBackground(new java.awt.Color(51, 0, 204));
        campoImagemProduto.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jPanel1.add(campoImagemProduto, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, 390, 160));

        textoCampoPesquisa.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        textoCampoPesquisa.setText("Digite o código ou nome do produto:");
        jPanel1.add(textoCampoPesquisa, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, 270, -1));

        campoProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoProdutoActionPerformed(evt);
            }
        });
        jPanel1.add(campoProduto, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 180, 380, 30));

        campoCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoCodigoActionPerformed(evt);
            }
        });
        jPanel1.add(campoCodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 240, 200, 30));
        jPanel1.add(campoUnidademedida, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 240, 160, 30));

        campoCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoCategoriaActionPerformed(evt);
            }
        });
        jPanel1.add(campoCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 310, 270, 30));

        labelNome.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        labelNome.setText("Nome:");
        jPanel1.add(labelNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 160, 50, -1));

        labelCodigo.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        labelCodigo.setText("Código:");
        jPanel1.add(labelCodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 220, 70, -1));

        labelUndmedida.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        labelUndmedida.setText("Und Medida:");
        jPanel1.add(labelUndmedida, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 220, 90, 20));

        labelCategoria.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        labelCategoria.setText("Categoria:");
        jPanel1.add(labelCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 290, 110, -1));

        labelQuantidade.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        labelQuantidade.setText("Qtd:");
        jPanel1.add(labelQuantidade, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 290, 40, -1));

        botaoMovimentarEstoque.setBackground(new java.awt.Color(0, 153, 102));
        botaoMovimentarEstoque.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        botaoMovimentarEstoque.setText("Mov. Estoque");
        botaoMovimentarEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoMovimentarEstoqueActionPerformed(evt);
            }
        });
        jPanel1.add(botaoMovimentarEstoque, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 370, 130, 30));

        quantidade.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        quantidade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {}));
        quantidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantidadeActionPerformed(evt);
            }
        });
        jPanel1.add(quantidade, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 310, 80, 30));

        tituloPágina.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tituloPágina.setText("Entrada e saída de estoque");
        jPanel1.add(tituloPágina, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 40, 250, 30));

        radioButtonSaida.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        radioButtonSaida.setText("Saída");
        radioButtonSaida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButtonSaidaActionPerformed(evt);
            }
        });
        jPanel1.add(radioButtonSaida, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 100, -1, -1));

        radioButtonEntrada.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        radioButtonEntrada.setText("Entrada");
        radioButtonEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButtonEntradaActionPerformed(evt);
            }
        });
        jPanel1.add(radioButtonEntrada, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 100, -1, -1));

        tabela_produto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Nome do Produto", "Codigo do Produto", "Unidade de medida", "Estoque Atual", "Categoria"
            }
        ));
        tabela_produto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabela_produtoTabela_Produto(evt);
            }
        });
        jScrollPane1.setViewportView(tabela_produto);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 420, 840, 130));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 574, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
        private void iconeTela(){  
                try {

                Image iconeTitulo = ImageIO.read(getClass().getResource("/imagens/logoGeral.png"));

                    this.setIconImage(iconeTitulo);

                } catch(IOException ex) {
                  System.out.println("Erro ao importar icone: " + ex.getMessage());
                }        

            }
    
    
        public void selecionarApenasumBotao(){
        
        group = new ButtonGroup();
        
        // Adiciona os botões ao grupo
        group.add(radioButtonSaida);
        group.add(radioButtonEntrada); 
        
        
        radioButtonSaida.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                userType = 0; 
                
            }
        });

        radioButtonEntrada.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                userType = 1; 
                
            }
        });
        
    }
        public void listarprodutostabela(){
          // Limpar a tabela antes de adicionar novos dados
    DefaultTableModel modeloTabela = (DefaultTableModel) tabela_produto.getModel();
    modeloTabela.setRowCount(0);  // Limpa as linhas da tabela

    // Chamar o método listarProdutos do controller
    List<Produtos> listaProdutos = produtosController.listarProdutos();

    // Preencher a tabela com os dados dos produtos
    for (Produtos produto : listaProdutos) {
        modeloTabela.addRow(new Object[]{
            produto.getProdutoID(),
            produto.getTipoProduto(),
            produto.getCodigo(),
            produto.getUnidadeVenda(),
            produto.getEstoqueAtual(),
            produto.getCategoria()
        });
    }
    }
    private void campoProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoProdutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoProdutoActionPerformed

    private void campoCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoCategoriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoCategoriaActionPerformed

    private void campoCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoCodigoActionPerformed
private int movimentacao ;
    private void radioButtonEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButtonEntradaActionPerformed
        // TODO add your handling code here:
        movimentacao = 1;
    }//GEN-LAST:event_radioButtonEntradaActionPerformed

    private void campoPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoPesquisaActionPerformed
        // TODO add your handling code here:
        
         String pesquisa = campoPesquisa.getText().trim();
        
        // Chama o método que busca os produtos no banco (ProdutosController)
        List<Produtos> produtos = new ProdutosController().listarProdutosNome(pesquisa);

        DefaultTableModel model = (DefaultTableModel) tabela_produto.getModel();
        model.setRowCount(0); // Limpa a tabela antes de adicionar os novos dados

        for (Produtos p : produtos) {
            model.addRow(new Object[]{
               p.getProdutoID(), p.getTipoProduto(), p.getCodigo(), p.getUnidadeVenda(), p.getEstoqueAtual(),p.getCategoria()
            });
        }
        
    }//GEN-LAST:event_campoPesquisaActionPerformed

    private void quantidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantidadeActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_quantidadeActionPerformed

    private void radioButtonSaidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButtonSaidaActionPerformed
        // TODO add your handling code here:
       movimentacao = 2;
    }//GEN-LAST:event_radioButtonSaidaActionPerformed
private int idproduto;
    private void botaoMovimentarEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoMovimentarEstoqueActionPerformed
        // TODO add your handling code here:
        try {
    // Verificar se o usuário está nulo
    if (user == null) {
        JOptionPane.showMessageDialog(null, "Usuário não encontrado!", "Erro", JOptionPane.ERROR_MESSAGE);
        return; // Retorna para evitar o processo de movimentação
    }

    String codigoProduto = campoCodigo.getText();
    int quantidadeItem = Integer.parseInt(quantidade.getSelectedItem().toString());

    // Verificar se os valores são válidos
    System.out.println("Código Produto: " + codigoProduto);
    System.out.println("Quantidade: " + quantidadeItem);

    MovimentacaoController movimentacaoController = new MovimentacaoController();

    MovimentacaoEstoque movimentacaoEst = new MovimentacaoEstoque();
    movimentacaoEst.setCodigoProduto(codigoProduto);
    movimentacaoEst.setIdProduto(idproduto);
    movimentacaoEst.setTipoMovimentacao(movimentacao);
    movimentacaoEst.setCodigoSolicitante(user.getCodigoUsuario());
    movimentacaoEst.setQuantidade(quantidadeItem);
    movimentacaoEst.setIdUsuario(user.getIdUsuario());

    // Tentativa de registrar a movimentação
    boolean sucesso = movimentacaoController.registrarMovimentacao(movimentacaoEst);

    if (sucesso) {
        // Mensagem de sucesso caso a movimentação seja realizada com sucesso
        JOptionPane.showMessageDialog(null, "Movimentação realizada com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
    } else {
        // Mensagem de erro caso a movimentação falhe
        JOptionPane.showMessageDialog(null, "Erro ao realizar a movimentação!", "Erro", JOptionPane.ERROR_MESSAGE);
    }
} catch (Exception e) {
    // Mensagem de erro caso ocorra uma exceção
    JOptionPane.showMessageDialog(null, "Erro ao realizar a movimentação: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
}

    }//GEN-LAST:event_botaoMovimentarEstoqueActionPerformed

    private void tabela_produtoTabela_Produto(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabela_produtoTabela_Produto
 //Captura a linha selecionada da tabela
    int linhaSelecionada = tabela_produto.getSelectedRow();
    
    // Verifica se a linha selecionada é válida
    if (linhaSelecionada != -1) {
        // Recupera os dados da linha selecionada
        String nomeProduto = tabela_produto.getValueAt(linhaSelecionada, 1).toString();
        String codigoProduto = tabela_produto.getValueAt(linhaSelecionada, 2).toString();
        String unidadeVenda = tabela_produto.getValueAt(linhaSelecionada, 3).toString();
        String estoqueAtual = tabela_produto.getValueAt(linhaSelecionada, 4).toString();
        String categoria = tabela_produto.getValueAt(linhaSelecionada,5).toString();
        
        // Preenche os campos de texto com os dados da linha
        campoProduto.setText(nomeProduto);
        campoCodigo.setText(codigoProduto);
        campoUnidademedida.setText(unidadeVenda); // Você pode ajustar de acordo com a necessidade do campo
        campoCategoria.setText(categoria);   // Também pode ser ajustado conforme necessário
    }
    }//GEN-LAST:event_tabela_produtoTabela_Produto

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaEntradaSaida.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaEntradaSaida.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaEntradaSaida.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaEntradaSaida.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Usuarios user = null;
                new TelaEntradaSaida(user).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoMovimentarEstoque;
    private javax.swing.JTextField campoCategoria;
    private javax.swing.JTextField campoCodigo;
    private javax.swing.JLabel campoImagemProduto;
    private javax.swing.JTextField campoPesquisa;
    private javax.swing.JTextField campoProduto;
    private javax.swing.JTextField campoUnidademedida;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelCategoria;
    private javax.swing.JLabel labelCodigo;
    private javax.swing.JLabel labelNome;
    private javax.swing.JLabel labelQuantidade;
    private javax.swing.JLabel labelUndmedida;
    private javax.swing.JComboBox<String> quantidade;
    private javax.swing.JRadioButton radioButtonEntrada;
    private javax.swing.JRadioButton radioButtonSaida;
    private javax.swing.JTable tabela_produto;
    private javax.swing.JLabel textoCampoPesquisa;
    private javax.swing.JLabel tituloPágina;
    // End of variables declaration//GEN-END:variables
}


